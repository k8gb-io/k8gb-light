// Code generated by MockGen. DO NOT EDIT.
// Source: controllers/mapper/provider.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	mapper "cloud.example.com/annotation-operator/controllers/mapper"
	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/networking/v1"
	types "k8s.io/apimachinery/pkg/types"
)

// MockProviderMapper is a mock of ProviderMapper interface.
type MockProviderMapper struct {
	ctrl     *gomock.Controller
	recorder *MockProviderMapperMockRecorder
}

// MockProviderMapperMockRecorder is the mock recorder for MockProviderMapper.
type MockProviderMapperMockRecorder struct {
	mock *MockProviderMapper
}

// NewMockProviderMapper creates a new mock instance.
func NewMockProviderMapper(ctrl *gomock.Controller) *MockProviderMapper {
	mock := &MockProviderMapper{ctrl: ctrl}
	mock.recorder = &MockProviderMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProviderMapper) EXPECT() *MockProviderMapperMockRecorder {
	return m.recorder
}

// FromGatewayAPI mocks base method.
func (m *MockProviderMapper) FromGatewayAPI() (*mapper.LoopState, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FromGatewayAPI")
	ret0, _ := ret[0].(*mapper.LoopState)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FromGatewayAPI indicates an expected call of FromGatewayAPI.
func (mr *MockProviderMapperMockRecorder) FromGatewayAPI() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FromGatewayAPI", reflect.TypeOf((*MockProviderMapper)(nil).FromGatewayAPI))
}

// FromIngress mocks base method.
func (m *MockProviderMapper) FromIngress(arg0 *v1.Ingress) (*mapper.LoopState, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FromIngress", arg0)
	ret0, _ := ret[0].(*mapper.LoopState)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FromIngress indicates an expected call of FromIngress.
func (mr *MockProviderMapperMockRecorder) FromIngress(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FromIngress", reflect.TypeOf((*MockProviderMapper)(nil).FromIngress), arg0)
}

// Get mocks base method.
func (m *MockProviderMapper) Get(arg0 types.NamespacedName) (*mapper.LoopState, mapper.Result, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*mapper.LoopState)
	ret1, _ := ret[1].(mapper.Result)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Get indicates an expected call of Get.
func (mr *MockProviderMapperMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockProviderMapper)(nil).Get), arg0)
}
