// Code generated by MockGen. DO NOT EDIT.
// Source: controllers/depresolver/resolver.go

// Package mocks is a generated GoMock package.
package mocks

/*
Copyright 2022 The k8gb Contributors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

Generated by GoLic, for more details see: https://github.com/AbsaOSS/golic
*/

import (
	reflect "reflect"

	depresolver "cloud.example.com/annotation-operator/controllers/depresolver"
	gomock "github.com/golang/mock/gomock"
)

// MockGslbResolver is a mock of GslbResolver interface.
type MockGslbResolver struct {
	ctrl     *gomock.Controller
	recorder *MockGslbResolverMockRecorder
}

// MockGslbResolverMockRecorder is the mock recorder for MockGslbResolver.
type MockGslbResolverMockRecorder struct {
	mock *MockGslbResolver
}

// NewMockGslbResolver creates a new mock instance.
func NewMockGslbResolver(ctrl *gomock.Controller) *MockGslbResolver {
	mock := &MockGslbResolver{ctrl: ctrl}
	mock.recorder = &MockGslbResolverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGslbResolver) EXPECT() *MockGslbResolverMockRecorder {
	return m.recorder
}

// ResolveOperatorConfig mocks base method.
func (m *MockGslbResolver) ResolveOperatorConfig() (*depresolver.Config, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResolveOperatorConfig")
	ret0, _ := ret[0].(*depresolver.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ResolveOperatorConfig indicates an expected call of ResolveOperatorConfig.
func (mr *MockGslbResolverMockRecorder) ResolveOperatorConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResolveOperatorConfig", reflect.TypeOf((*MockGslbResolver)(nil).ResolveOperatorConfig))
}
