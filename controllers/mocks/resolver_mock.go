// Code generated by MockGen. DO NOT EDIT.
// Source: controllers/depresolver/resolver.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	depresolver "cloud.example.com/annotation-operator/controllers/depresolver"
	gomock "github.com/golang/mock/gomock"
)

// MockGslbResolver is a mock of GslbResolver interface.
type MockGslbResolver struct {
	ctrl     *gomock.Controller
	recorder *MockGslbResolverMockRecorder
}

// MockGslbResolverMockRecorder is the mock recorder for MockGslbResolver.
type MockGslbResolverMockRecorder struct {
	mock *MockGslbResolver
}

// NewMockGslbResolver creates a new mock instance.
func NewMockGslbResolver(ctrl *gomock.Controller) *MockGslbResolver {
	mock := &MockGslbResolver{ctrl: ctrl}
	mock.recorder = &MockGslbResolverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGslbResolver) EXPECT() *MockGslbResolverMockRecorder {
	return m.recorder
}

// ResolveOperatorConfig mocks base method.
func (m *MockGslbResolver) ResolveOperatorConfig() (*depresolver.Config, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResolveOperatorConfig")
	ret0, _ := ret[0].(*depresolver.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ResolveOperatorConfig indicates an expected call of ResolveOperatorConfig.
func (mr *MockGslbResolverMockRecorder) ResolveOperatorConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResolveOperatorConfig", reflect.TypeOf((*MockGslbResolver)(nil).ResolveOperatorConfig))
}
