// Code generated by MockGen. DO NOT EDIT.
// Source: controllers/providers/dns/infoblox-client.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	ibclient "github.com/infobloxopen/infoblox-go-client"
)

// MockInfobloxClient is a mock of InfobloxClient interface.
type MockInfobloxClient struct {
	ctrl     *gomock.Controller
	recorder *MockInfobloxClientMockRecorder
}

// MockInfobloxClientMockRecorder is the mock recorder for MockInfobloxClient.
type MockInfobloxClientMockRecorder struct {
	mock *MockInfobloxClient
}

// NewMockInfobloxClient creates a new mock instance.
func NewMockInfobloxClient(ctrl *gomock.Controller) *MockInfobloxClient {
	mock := &MockInfobloxClient{ctrl: ctrl}
	mock.recorder = &MockInfobloxClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInfobloxClient) EXPECT() *MockInfobloxClientMockRecorder {
	return m.recorder
}

// GetObjectManager mocks base method.
func (m *MockInfobloxClient) GetObjectManager() (*ibclient.ObjectManager, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObjectManager")
	ret0, _ := ret[0].(*ibclient.ObjectManager)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetObjectManager indicates an expected call of GetObjectManager.
func (mr *MockInfobloxClientMockRecorder) GetObjectManager() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObjectManager", reflect.TypeOf((*MockInfobloxClient)(nil).GetObjectManager))
}
